#pragma checksum "c:\Users\karn_\Documents\kafer\kafer_house\Views\CartActual\Create.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "4b2f90b8e2fc3855e3be316e6afd5c7a262154ab"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_CartActual_Create), @"mvc.1.0.view", @"/Views/CartActual/Create.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/CartActual/Create.cshtml", typeof(AspNetCore.Views_CartActual_Create))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "c:\Users\karn_\Documents\kafer\kafer_house\Views\_ViewImports.cshtml"
using kafer_house;

#line default
#line hidden
#line 2 "c:\Users\karn_\Documents\kafer\kafer_house\Views\_ViewImports.cshtml"
using kafer_house.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"4b2f90b8e2fc3855e3be316e6afd5c7a262154ab", @"/Views/CartActual/Create.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f597968a71fe0965886cf747df1e859bf957b674", @"/Views/_ViewImports.cshtml")]
    public class Views_CartActual_Create : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<kafer_house.Models.CartActual>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(38, 4359, true);
            WriteLiteral(@"

   <!-- Hero -->
   <div class=""bg-body-light"">
    <div class=""content content-full"">
      <div
        class=""d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center""
      >
        <h1 class=""flex-sm-fill font-size-h2 font-w400 mt-2 mb-0 mb-sm-2"">
          Actual Sales
        </h1>
        <nav class=""flex-sm-00-auto ml-sm-3"" aria-label=""breadcrumb"">
          <ol class=""breadcrumb"">
            <li class=""breadcrumb-item"">Tables</li>
            <li class=""breadcrumb-item active"" aria-current=""page"">
              Responsive
            </li>
          </ol>
        </nav>
      </div>
    </div>
  </div>
  <!-- END Hero -->

<div class=""row"">
    <div class=""col-md-6"">
        <!-- <div class=""form-group"">
            <label class=""control-label"">product </label>
            <select id=""product_names"" />
        </div> -->
        <!-- <div class=""form-group"">
            price <input id=""txt_price"" />
        </div> -->
        <!-- <div cla");
            WriteLiteral(@"ss=""form-group"">
            <input id=""txt_qty""></input>
            <button id=""cmd_inc"">+</button>
            <button id=""cmd_dec"">-</button>
        </div> -->
        
        <!-- <div class=""form-group"">
            <button id=""cmd_add"">add</button>
        </div> -->

        <!-- <table class=""table"" id=""table1"">
            <tr>
                <th>name</th>
                <th>qty</th>
                <th>price</th>
                <th>total</th>
                <th>operation</th>
            </tr>
        </table> -->
        <!-- <button id=""cmd_confirm"">confirm</button> -->
    </div>
</div>


<!-- Page Content -->
<div class=""content"">
    <!-- Full Table -->
    <div class=""block block-rounded block-bordered"">
      <div class=""block-header block-header-default"">
        <h3 class=""block-title"">Create</h3>
      </div>
   
      <div class=""block-content"">
        <div class=""col-md-4"">
            <div class=""form-group"">
                <label for=""shoppin");
            WriteLiteral(@"gMall_names"">Date</label>
                <input type=""text"" class=""js-datepicker form-control"" id=""my-date-picker"" name=""example-datepicker2"" data-week-start=""1"" data-autoclose=""true"" data-today-highlight=""true"" data-date-format=""dd/mm/yy"" placeholder=""dd/mm/yy"">
            </div>
         
            <div class=""form-group"">
                <label for=""shoppingMall_names"">Select Shopping Mall:</label>
                <select class=""form-control"" id=""shoppingMall_names""></select>
            </div>
            <div class=""form-group"">
              <label for=""branch_names"">Select Branch:</label>
              <select class=""form-control"" id=""branch_names""></select>
          </div>
            <div class=""form-group"">
                <label for=""product_names"">Select Product:</label>
                <select class=""form-control"" id=""product_names""></select>
            </div>
            <div class=""form-group"">
                 <input type=""hidden"" id=""txt_price"" />
             </div>
");
            WriteLiteral(@"             <div class=""form-group"">
                <label class=""control-label"" for=""txt_qty"">Quantity: 
                    <button type=""button"" id=""cmd_inc"" class=""btn btn-outline-primary"">+</button>
                    <button id=""cmd_dec"" class=""btn btn-outline-primary"">-</button>
                </label>
                <input class=""form-control"" id=""txt_qty""></input>
            </div>
            <div class=""form-group"">
                    <button class=""btn btn-primary"" id=""cmd_add"">Add</button>
            </div>
        </div>
      </div>

      <!------------------>
        <div class=""block-content"">
            <div class=""table-responsive"">
                <table class=""table table-bordered table-striped table-vcenter"" id=""table1"">
                        <tr>
                            <th>name</th>
                            <th>qty</th>
                            <th>price</th>
                            <th>total</th>
                            <th>operation");
            WriteLiteral(@"</th>
                        </tr>
                </table>
            </div>
            <div class=""form-group"">
                    <button class=""btn btn-primary"" id=""cmd_confirm"">confirm</button>
                </div>
        </div>
  </div>


");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(4414, 6483, true);
                WriteLiteral(@"
 


<script>
  $('.js-datepicker').datepicker({
    'format': 'dd-mm-yyyy',
    'autoclose': true
  });
        var productList =[];
        var shoppingMallList =[];
        var cart = [];
        var cmb_shoppingMall_names   = $('#shoppingMall_names');
        var cmb_branch_names = $('#branch_names')
        var cmb_product_names   = $('#product_names');
        var txt_qty             = $('#txt_qty');
        var txt_price           = $('#txt_price');
        var tbl_table1          = $('#table1');
        var cmd_inc             = $('#cmd_inc');
        var cmd_dec             = $('#cmd_dec');
        var cmd_add             = $('#cmd_add');
        var cmd_confirm         = $('#cmd_confirm');
        var my_date_picker      = $('#my-date-picker');

    $(document).ready(cb);

    function cb() {

        //register combobox event
        my_date_picker.change(cb_date_change);
        cmb_product_names.change(cb_change);
        cmd_inc.click(cb_inc_clicked);
        cmd_");
                WriteLiteral(@"dec.click(cb_dec_clicked);
        cmd_add.click(cb_add_clicked);
        cmd_confirm.click(cb_confirm_clicked);

        $.get(""/product/products"", product_data_arrived);
        $.get(""/shoppingmall/shoppingMalls"", shoppingMall_data_arrived);
        $.get(""/branch/branchs"", branch_data_arrived);



    }//end cb

    function shoppingMall_data_arrived(data) {
        shoppingMallList = data;
        $.each(data, function (key, item) {
          cmb_shoppingMall_names.append('<option value=' + item.id + '>' + item.name + '</option>');
        });

        // txt_price.val(productList[0].price);
        // txt_qty.val(""1"");
    }

    function cb_date_change(data){
      console.log($('#my-date-picker').val())
    }

    function product_data_arrived(data) {
        productList = data;
        $.each(data, function (key, item) {
            cmb_product_names.append('<option value=' + item.id + '>' + item.name + '</option>');
        });

        txt_price.val(productList[0].pr");
                WriteLiteral(@"ice);
        txt_qty.val(""1"");
        
    }//ef

    $(function() {
    $('#shoppingMall_names').change(function() {
      console.log($('#shoppingMall_names').val());
        $.ajax({
            type: 'GET',
            data: {items: $('#shoppingMall_names').val()},
            url:'/branch/branchs',
            success: render_branch,
            error: function(err){console.log('error',err);}

        });
    });
});

    function render_branch(data){
             console.log(data) //redirect to Index Action
            //  productList = data;
             $.each(data, function (key, item) {
             cmb_branch_names.append('<option value=' + item.id + '>' + item.name + '</option>');
        });
        }


    function cb_change(){
        
         //get selection value
         var product_id = cmb_product_names.val();  

        //search object in the productList by product_id
        var found = productList.find((a)=>{
            return a.id == product_id
 ");
                WriteLiteral(@"       });

        //update product price in txt price textbox
        if(found != null){
            txt_price.val(found.price);
            
        }
        
    }

    function cb_inc_clicked(){
    
        var value = parseInt(txt_qty.val());
        value++;
        txt_qty.val(value.toString());
    }

    function cb_dec_clicked(){
          
          var value = parseInt(txt_qty.val());
          value--;
          if(value ==0) { value =1;}
          txt_qty.val(value.toString());
      }

      function cb_add_clicked(){
            var product_id = cmb_product_names.val(); //get selection value
            var price = parseFloat(txt_price.val());
            var qty   = parseInt(txt_qty.val());
            var shoppingMallId = cmb_shoppingMall_names.val();
           
             var found = productList.find((a)=>{
                return a.id == product_id
            });

            
            var row = {
                id          : product_id,
    ");
                WriteLiteral(@"            name        : found.name,
                price       : price,
                qty         : qty,
                total       : price*qty,
                
            };
            cart.push(row);
            updateTable();
            

        }

        function tr(data){return '<tr>'+ data + '</tr>';}
        function td(data){return '<td>'+ data + '</td>';}
        function button(id,data){return '<button  onclick=""cb_removes_clicked(this)"" data-id=""'+id+'"">'+ data + '</button>';}

        function updateTable(){
            //remove all rows except the header row
            tbl_table1.find(""tr:gt(0)"").remove();
            var total = 0;
            for(var i = 0; i< cart.length;i++){
                var row = tr(td(cart[i].name)+td(cart[i].qty)+td(cart[i].price)+td(cart[i].total)+td(button(cart[i].id,""remove"")));
                tbl_table1.append(row);
                total += cart[i].price* cart[i].qty;
            }
            var summary = tr(td('total')+td('");
                WriteLiteral(@"')+td('')+td(total));

            var shoppingMallFound = shoppingMallList.find((mall) => {
              return mall.id == shoppingMallId
            })
            var mallSummary = tr(td('total')+td('')+td('')+td(shoppingMallFound.name));
            tbl_table1.append(summary);
            tbl_table1.append(mallSummary);


        }

        
        function cb_confirm_clicked(){ 
        
        var result = [];
        for(var i = 0;i< cart.length;i++){
            result.push({
                productId: cart[i].id,
                productName: cart[i].name,
                productQty: cart[i].qty,
                productPrice: cart[i].price,
                shoppingMall: cmb_shoppingMall_names.val()

            });
        }

        console.log(result);
        //step30: post operation
        option ={
                // dataType: ""json"",
                data: {items:result, shoppingMallId: cmb_shoppingMall_names.val()},
                url:'/cartactual/addcart',
");
                WriteLiteral(@"                success: addcart_done,
                error: function(err){console.log('error',err);}
        };
        $.post(option); 
    }
     //step33: data return from the server side
     function addcart_done(data){
             window.location.replace(data.newUrl); //redirect to Index Action
        }

</script>

");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<kafer_house.Models.CartActual> Html { get; private set; }
    }
}
#pragma warning restore 1591
