@model kafer_house.Models.CartActual


   <!-- Hero -->
   <div class="bg-body-light">
    <div class="content content-full">
      <div
        class="d-flex flex-column flex-sm-row justify-content-sm-between align-items-sm-center"
      >
        <h1 class="flex-sm-fill font-size-h2 font-w400 mt-2 mb-0 mb-sm-2">
          Actual Sales
        </h1>
        <nav class="flex-sm-00-auto ml-sm-3" aria-label="breadcrumb">
          <ol class="breadcrumb">
            <li class="breadcrumb-item">Tables</li>
            <li class="breadcrumb-item active" aria-current="page">
              Responsive
            </li>
          </ol>
        </nav>
      </div>
    </div>
  </div>
  <!-- END Hero -->

<div class="row">
    <div class="col-md-6">
        <!-- <div class="form-group">
            <label class="control-label">product </label>
            <select id="product_names" />
        </div> -->
        <!-- <div class="form-group">
            price <input id="txt_price" />
        </div> -->
        <!-- <div class="form-group">
            <input id="txt_qty"></input>
            <button id="cmd_inc">+</button>
            <button id="cmd_dec">-</button>
        </div> -->
        
        <!-- <div class="form-group">
            <button id="cmd_add">add</button>
        </div> -->

        <!-- <table class="table" id="table1">
            <tr>
                <th>name</th>
                <th>qty</th>
                <th>price</th>
                <th>total</th>
                <th>operation</th>
            </tr>
        </table> -->
        <!-- <button id="cmd_confirm">confirm</button> -->
    </div>
</div>


<!-- Page Content -->
<div class="content">
    <!-- Full Table -->
    <div class="block block-rounded block-bordered">
      <div class="block-header block-header-default">
        <h3 class="block-title">Create</h3>
      </div>
   
      <div class="block-content">
        <div class="col-md-4">
          <div class="form-group">
            <label asp-for="dateSold" class="control-label"></label>
            <input asp-for="dateSold" type="date" asp-format="{0:dd-MM-yyyy}" id="date_sold" class="form-control" />
            <span asp-validation-for="dateSold" class="text-danger"></span>
        </div>
         
            <div class="form-group">
                <label for="shoppingMall_names">Select Shopping Mall:</label>
                <select class="form-control" id="shoppingMall_names"></select>
            </div>
            <div class="form-group">
              <label for="branch_names">Select Branch:</label>
              <select class="form-control" id="branch_names"></select>
          </div>
            <div class="form-group">
                <label for="product_names">Select Product:</label>
                <select class="form-control" id="product_names"></select>
            </div>
            <div class="form-group">
                 <input type="hidden" id="txt_price" />
             </div>
             <div class="form-group">
                <label class="control-label" for="txt_qty">Quantity: 
                    <button type="button" id="cmd_inc" class="btn btn-outline-primary">+</button>
                    <button id="cmd_dec" class="btn btn-outline-primary">-</button>
                </label>
                <input class="form-control" id="txt_qty"></input>
            </div>
            <div class="form-group">
                    <button class="btn btn-primary" id="cmd_add">Add</button>
            </div>
        </div>
      </div>

      <!------------------>
        <div class="block-content">
            <div class="table-responsive">
                <table class="table table-bordered table-striped table-vcenter" id="table1">
                        <tr>
                            <th>name</th>
                            <th>qty</th>
                            <th>price</th>
                            <th>total</th>
                            <th>operation</th>
                        </tr>
                </table>
            </div>
            <div class="form-group">
                    <button class="btn btn-primary" id="cmd_confirm">confirm</button>
                </div>
        </div>
  </div>


@section Scripts{
 
<script>
  var productList               = [];
  var shoppingMallList          = [];
  var cart                      = [];
  var cmb_shoppingMall_names    = $('#shoppingMall_names');
  var cmb_branch_names          = $('#branch_names');
  var cmb_product_names         = $('#product_names');
  var txt_qty                   = $('#txt_qty');
  var txt_price                 = $('#txt_price');
  var tbl_table1                = $('#table1');
  var cmd_inc                   = $('#cmd_inc');
  var cmd_dec                   = $('#cmd_dec');
  var cmd_add                   = $('#cmd_add');
  var cmd_confirm               = $('#cmd_confirm');
  var cmb_date_sold             = $('#date_sold');

  $(document).ready(cb);

  function cb() {
    console.log("ready");
    // register combobox event

    cmb_product_names.change(cb_change);
    cmd_inc.click(cb_inc_clicked);
    cmd_dec.click(cb_dec_clicked);
    cmd_add.click(cb_add_clicked);
    cmd_confirm.click(cb_confirm_clicked);

    $.get("/product/products", product_data_arrived);
    $.get("/shoppingmall/shoppingMalls", shoppingMall_data_arrived);
    // $.get("/branch/branchs", branch_data_arrived);



  }//end cb

  function shoppingMall_data_arrived(data) {
    console.log(data, "data")
    shoppingMallList = data;
    $.each(data, function (key, item) {
      cmb_shoppingMall_names.append('<option value=' + item.id + '>' + item.name + '</option>');
    });

    txt_qty.val("1");

    populateBranch();
  }

  function populateBranch() {

    $.ajax({
      type: 'GET',
      data: { items: $('#shoppingMall_names').val() },
      url: '/branch/branchs',
      success: render_branch,
      error: function (err) { console.log('error', err); }

    });

  }


  function cb_date_change(data) {
    console.log($('#my-date-picker').val())
  }

  function product_data_arrived(data) {
    productList = data;
    $.each(data, function (key, item) {
      cmb_product_names.append('<option value=' + item.id + '>' + item.name + '</option>');
    });

    txt_price.val(productList[0].price);
    txt_qty.val("1");

  }//ef

  $(function () {
    $('#shoppingMall_names').change(function () {
      console.log($('#shoppingMall_names').val());
      $.ajax({
        type: 'GET',
        data: { items: $('#shoppingMall_names').val() },
        url: '/branch/branchs',
        success: render_branch,
        error: function (err) { console.log('error', err); }

      });
    });
  });

  

  function render_branch(data) {

    if (data) {
      cmb_branch_names.empty();
    }
    $.each(data, function (key, item) {
      cmb_branch_names.append('<option value=' + item.id + '>' + item.name + '</option>');
    });
  }


  function cb_change() {

    //get selection value
    var product_id = cmb_product_names.val();

    //search object in the productList by product_id
    var found = productList.find((a) => {
      return a.id == product_id
    });

    //update product price in txt price textbox
    if (found != null) {
      txt_price.val(found.price);

    }

  }

  function cb_inc_clicked() {

    var value = parseInt(txt_qty.val());
    value++;
    txt_qty.val(value.toString());
  }

  function cb_dec_clicked() {

    var value = parseInt(txt_qty.val());
    value--;
    if (value == 0) { value = 1; }
    txt_qty.val(value.toString());
  }

  function cb_add_clicked() {
    console.log(cmb_date_sold.val(), "date");
    var product_id = cmb_product_names.val(); //get selection value
    var price = parseFloat(txt_price.val());
    var qty = parseInt(txt_qty.val());
    var shoppingMallId = cmb_shoppingMall_names.val();

    var found = productList.find((a) => {
      return a.id == product_id
    });


    var row = {
      id: product_id,
      name: found.name,
      price: price,
      qty: qty,
      total: price * qty,

    };


    const productExist = cart.some(el => el.id === product_id);

    if (!productExist) {
      cart.push(row);
      updateTable();
    } else {
      alert("product already exist")
    }



  }

  function tr(data) { return '<tr>' + data + '</tr>'; }
  function td(data) { return '<td>' + data + '</td>'; }
  function button(id, data) { return '<button  onclick="cb_removes_clicked(this)" data-id="' + id + '">' + data + '</button>'; }

  function cb_removes_clicked(obj) {
    //console.log($(this).val());
    var product_id = $(obj).attr('data-id');
    cart = cart.filter((a) => {
      return a.id != product_id
    });
    updateTable();
  }

  var totalRev = 0;
  function updateTable() {
    //remove all rows except the header row
    tbl_table1.find("tr:gt(0)").remove();
    // var total = 0;
    for (var i = 0; i < cart.length; i++) {
      var row = tr(td(cart[i].name) + td(cart[i].qty) + td(cart[i].price) + td(cart[i].total) + td(button(cart[i].id, "remove")));
      tbl_table1.append(row);
      totalRev += cart[i].price * cart[i].qty;
    }
    var summary = tr(td('total') + td('') + td('') + td(totalRev));

    tbl_table1.append(summary);
    // //remove all rows except the header row
    // tbl_table1.find("tr:gt(0)").remove();
    // var total = 0;
    // for(var i = 0; i< cart.length;i++){
    //     var row = tr(td(cart[i].name)+td(cart[i].qty)+td(cart[i].price)+td(cart[i].total)+td(button(cart[i].id,"remove")));
    //     tbl_table1.append(row);
    //     total += cart[i].price* cart[i].qty;
    // }
    // var summary = tr(td('total')+td('')+td('')+td(total));

    // var shoppingMallFound = shoppingMallList.find((mall) => {
    //   return mall.id == shoppingMallId
    // })
    // var mallSummary = tr(td('total')+td('')+td('')+td(shoppingMallFound.name));
    // tbl_table1.append(summary);
    // tbl_table1.append(mallSummary);


  }


  function cb_confirm_clicked() {

    var result = [];
    for (var i = 0; i < cart.length; i++) {
      result.push({
        productId: cart[i].id,
        productName: cart[i].name,
        productQty: cart[i].qty,
        productPrice: cart[i].price,


      });
    }


    //step30: post operation
    option = {
      // dataType: "json",
      data: {
        items: result,
        dateSold: cmb_date_sold.val(),
        shoppingMallId: cmb_shoppingMall_names.val(),
        branchId: cmb_branch_names.val(),
        totalRev: totalRev,
      },
      url: '/cartactual/addcart',
      success: addcart_done,
      error: function (err) { console.log('error', err); }
    };
    $.post(option);
  }
  //step33: data return from the server side
  function addcart_done(data) {
    window.location.replace(data.newUrl); //redirect to Index Action
  }

</script>

}